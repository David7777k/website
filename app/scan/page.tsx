'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import QRScanner from '../components/QRScanner'

export default function ScanPage() {
  const router = useRouter()
  const [isScanning, setIsScanning] = useState(false)
  const [scanResult, setScanResult] = useState<string | null>(null)
  const [error, setError] = useState<string | null>(null)

  const handleScan = async (data: string) => {
    setScanResult(data)
    setIsScanning(false)

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ QR –∫–æ–¥–∞
    try {
      // –ï—Å–ª–∏ —ç—Ç–æ URL, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –Ω–µ–≥–æ
      if (data.startsWith('http')) {
        window.location.href = data
      } else if (data.startsWith('visit:')) {
        // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–¥ –≤–∏–∑–∏—Ç–∞
        const visitCode = data.replace('visit:', '')
        router.push(`/visit-confirmation?code=${visitCode}`)
      } else if (data.startsWith('promo:')) {
        // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–º–æ–∫–æ–¥
        const promoCode = data.replace('promo:', '')
        router.push(`/promos?code=${promoCode}`)
      } else if (data.startsWith('tip:')) {
        // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–¥ –¥–ª—è —á–∞–µ–≤—ã—Ö
        const staffId = data.replace('tip:', '')
        router.push(`/tips?staff=${staffId}`)
      } else {
        // –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        setError('QR –∫–æ–¥ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω: ' + data)
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ QR –∫–æ–¥–∞')
    }
  }

  const handleError = (err: string) => {
    setError(err)
    setIsScanning(false)
  }

  return (
    <div className="min-h-screen bg-black">
      <div className="max-w-4xl mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="inline-block p-4 bg-gradient-to-br from-lime-500 to-green-600 rounded-2xl mb-4 border-2 border-lime-500/30">
            <span className="text-5xl">üì±</span>
          </div>
          <h1 className="text-3xl font-bold text-white mb-2">
            –°–∫–∞–Ω–µ—Ä QR-–∫–æ–¥—ñ–≤
          </h1>
          <p className="text-gray-400">
            –°–∫–∞–Ω—É–π—Ç–µ QR-–∫–æ–¥–∏ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–∑–∏—Ç—ñ–≤, –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ø—Ä–æ–º–æ–∫–æ–¥—ñ–≤ —Ç–∞ –±—ñ–ª—å—à–µ
          </p>
        </div>

        {/* Scanner Card */}
        <div className="bg-gray-900 rounded-2xl p-8 border border-gray-800 mb-6">
          {!isScanning && !scanResult && (
            <div className="text-center space-y-6">
              <div className="relative">
                <div className="w-48 h-48 mx-auto bg-gray-800 rounded-2xl flex items-center justify-center border-2 border-dashed border-lime-500/50">
                  <span className="text-7xl">üîç</span>
                </div>
              </div>
              
              <button
                onClick={() => setIsScanning(true)}
                className="px-8 py-4 bg-lime-500 hover:bg-lime-600 text-black font-semibold rounded-xl transition-all"
              >
                üì∏ –ü–æ—á–∞—Ç–∏ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è
              </button>
            </div>
          )}

          {isScanning && (
            <div className="space-y-4">
              <QRScanner
                onScan={handleScan}
                onError={handleError}
              />
              <button
                onClick={() => setIsScanning(false)}
                className="w-full px-6 py-3 bg-gray-800 text-gray-300 border border-gray-700 rounded-xl hover:bg-gray-700 transition-all"
              >
                ‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏
              </button>
            </div>
          )}

          {scanResult && (
            <div className="text-center space-y-4">
              <div className="text-6xl mb-4">‚úÖ</div>
              <h3 className="text-2xl font-bold text-lime-400 mb-2">
                QR-–∫–æ–¥ –≤—ñ–¥—Å–∫–∞–Ω–æ–≤–∞–Ω–∏–π!
              </h3>
              <div className="bg-gray-800 rounded-xl p-4 border border-gray-700">
                <p className="text-gray-300 font-mono break-all text-sm">
                  {scanResult}
                </p>
              </div>
              <button
                onClick={() => {
                  setScanResult(null)
                  setError(null)
                }}
                className="px-6 py-3 bg-lime-500 hover:bg-lime-600 text-black font-semibold rounded-xl transition-all"
              >
                üîÑ –°–∫–∞–Ω—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
              </button>
            </div>
          )}

          {error && (
            <div className="bg-red-500/10 border border-red-500/20 rounded-xl p-4 text-red-400 text-center">
              ‚ö†Ô∏è {error}
            </div>
          )}
        </div>

        {/* Info Cards */}
        <div className="grid md:grid-cols-2 gap-4">
          <div className="bg-gray-900 border border-gray-800 rounded-xl p-5">
            <div className="text-3xl mb-2">üé´</div>
            <h3 className="text-lg font-semibold text-white mb-1">–í—ñ–∑–∏—Ç–∏</h3>
            <p className="text-gray-400 text-sm">
              –°–∫–∞–Ω—É–π—Ç–µ QR-–∫–æ–¥ –Ω–∞ —Å—Ç–æ–ª–∏–∫—É –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–∑–∏—Ç—É —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—ñ–≤
            </p>
          </div>

          <div className="bg-gray-900 border border-gray-800 rounded-xl p-5">
            <div className="text-3xl mb-2">üéÅ</div>
            <h3 className="text-lg font-semibold text-white mb-1">–ü—Ä–æ–º–æ–∫–æ–¥–∏</h3>
            <p className="text-gray-400 text-sm">
              –ê–∫—Ç–∏–≤—É–π—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥–∏ –∑—ñ –∑–Ω–∏–∂–∫–∞–º–∏ —Ç–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–º–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è–º–∏
            </p>
          </div>

          <div className="bg-gray-900 border border-gray-800 rounded-xl p-5">
            <div className="text-3xl mb-2">üí∞</div>
            <h3 className="text-lg font-semibold text-white mb-1">–ß–∞–π–æ–≤—ñ</h3>
            <p className="text-gray-400 text-sm">
              –°–∫–∞–Ω—É–π—Ç–µ QR-–∫–æ–¥ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞ –¥–ª—è —à–≤–∏–¥–∫–∏—Ö —á–∞–π–æ–≤–∏—Ö
            </p>
          </div>

          <div className="bg-gray-900 border border-gray-800 rounded-xl p-5">
            <div className="text-3xl mb-2">üé°</div>
            <h3 className="text-lg font-semibold text-white mb-1">–ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω–∏</h3>
            <p className="text-gray-400 text-sm">
              –û—Ç—Ä–∏–º–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –¥–æ –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–∏—Ö —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ–≤
            </p>
          </div>
        </div>

        {/* Tips */}
        <div className="mt-6 bg-gray-900 border border-gray-800 rounded-xl p-5">
          <h3 className="text-base font-semibold text-white mb-3 flex items-center gap-2">
            üí° –ü–æ—Ä–∞–¥–∏ –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è
          </h3>
          <ul className="space-y-2 text-gray-400 text-sm">
            <li className="flex items-start gap-2">
              <span className="text-lime-500">‚Ä¢</span>
              –¢—Ä–∏–º–∞–π—Ç–µ –∫–∞–º–µ—Ä—É —Å—Ç–∞–±—ñ–ª—å–Ω–æ –Ω–∞ –≤—ñ–¥—Å—Ç–∞–Ω—ñ 10-15 —Å–º –≤—ñ–¥ QR-–∫–æ–¥—É
            </li>
            <li className="flex items-start gap-2">
              <span className="text-lime-500">‚Ä¢</span>
              –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —î –¥–æ—Å—Ç–∞—Ç–Ω—î –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è
            </li>
            <li className="flex items-start gap-2">
              <span className="text-lime-500">‚Ä¢</span>
              QR-–∫–æ–¥ –º–∞—î –ø–æ–≤–Ω—ñ—Å—Ç—é –ø–æ–º—ñ—Å—Ç–∏—Ç–∏—Å—å –≤ –∫–∞–¥—Ä—ñ
            </li>
            <li className="flex items-start gap-2">
              <span className="text-lime-500">‚Ä¢</span>
              –Ø–∫—â–æ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –Ω–µ –ø—Ä–∞—Ü—é—î, —Å–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–∏ –∫–∞–º–µ—Ä—É
            </li>
          </ul>
        </div>
      </div>
    </div>
  )
}