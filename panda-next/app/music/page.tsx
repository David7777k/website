'use client'

import React, { useState, useEffect } from 'react'
import { useSession } from 'next-auth/react'

interface SpotifyTrack {
  id: string
  title: string
  artist: string
  album: string
  duration: number
  preview_url: string | null
  image: string
  spotify_url: string
  popularity: number
}

interface MusicOrder {
  id: number
  title: string
  artist: string
  orderedBy: string
  timeLeft: string
  status: 'playing' | 'queued' | 'pending'
}

export default function MusicPage() {
  const { data: session } = useSession()
  const [searchQuery, setSearchQuery] = useState('')
  const [searchResults, setSearchResults] = useState<SpotifyTrack[]>([])
  const [trendingTracks, setTrendingTracks] = useState<SpotifyTrack[]>([])
  const [loading, setLoading] = useState(false)
  const [selectedTrack, setSelectedTrack] = useState<SpotifyTrack | null>(null)
  const [orderAmount, setOrderAmount] = useState(50)

  // Mock current queue
  const currentQueue: MusicOrder[] = [
    { id: 1, title: "Shape of You", artist: "Ed Sheeran", orderedBy: "–ê–Ω–Ω–∞ –ö.", timeLeft: "02:45", status: 'playing' },
    { id: 2, title: "Blinding Lights", artist: "The Weeknd", orderedBy: "–ú–∞–∫—Å–∏–º –ü.", timeLeft: "05:20", status: 'queued' },
    { id: 3, title: "Watermelon Sugar", artist: "Harry Styles", orderedBy: "–í—ñ–∫—Ç–æ—Ä—ñ—è –°.", timeLeft: "08:35", status: 'queued' }
  ]

  useEffect(() => {
    fetchTrendingTracks()
  }, [])

  const fetchTrendingTracks = async () => {
    try {
      const response = await fetch('/api/music/trending')
      if (response.ok) {
        const data = await response.json()
        setTrendingTracks(data.tracks)
      }
    } catch (error) {
      console.error('Error fetching trending tracks:', error)
    }
  }

  const searchTracks = async () => {
    if (!searchQuery.trim() || searchQuery.length < 2) return

    setLoading(true)
    try {
      const response = await fetch(`/api/music/search?q=${encodeURIComponent(searchQuery)}&limit=10`)
      if (response.ok) {
        const data = await response.json()
        setSearchResults(data.tracks)
      }
    } catch (error) {
      console.error('Error searching tracks:', error)
    } finally {
      setLoading(false)
    }
  }

  const orderTrack = async (track: SpotifyTrack) => {
    if (!session) {
      alert('–ü–æ—Ç—Ä—ñ–±–Ω–æ —É–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –º—É–∑–∏–∫–∏')
      return
    }

    try {
      const response = await fetch('/api/music/order', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          track_id: track.id,
          title: track.title,
          artist: track.artist,
          amount: orderAmount,
          spotify_url: track.spotify_url
        })
      })

      if (response.ok) {
        alert(`–¢—Ä–µ–∫ "${track.title}" –∑–∞–º–æ–≤–ª–µ–Ω–æ –∑–∞ ${orderAmount}‚Ç¥!`)
        setSelectedTrack(null)
      } else {
        alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ —Ç—Ä–µ–∫—É')
      }
    } catch (error) {
      console.error('Error ordering track:', error)
      alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ —Ç—Ä–µ–∫—É')
    }
  }

  const formatDuration = (seconds: number) => {
    const mins = Math.floor(seconds / 60)
    const secs = seconds % 60
    return `${mins}:${secs.toString().padStart(2, '0')}`
  }

  return (
    <div className="space-y-6">
      {/* Page Header */}
      <div className="text-center space-y-4">
        <h1 className="text-4xl md:text-6xl font-black gradient-text-bamboo">
          üéµ –î–∂—É–∫–±–æ–∫—Å
        </h1>
        <p className="text-xl text-text-secondary max-w-2xl mx-auto">
          –ó–∞–º–æ–≤–ª—è–π —Å–≤–æ—é —É–ª—é–±–ª–µ–Ω—É –º—É–∑–∏–∫—É —Ç–∞ —Å—Ç–≤–æ—Ä—é–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—É
        </p>
      </div>

      {/* Current Playing + Queue */}
      <section className="space-y-4">
        <h2 className="text-2xl font-bold flex items-center gap-3">
          <span>üé∂</span> –ó–∞—Ä–∞–∑ –≥—Ä–∞—î
        </h2>
        
        <div className="card pattern-bamboo">
          <div className="flex items-center gap-4">
            <div className="w-16 h-16 rounded-2xl bg-bamboo flex items-center justify-center text-2xl text-black animate-pulse">
              üéµ
            </div>
            <div className="flex-1">
              <h3 className="text-xl font-bold mb-1">Perfect</h3>
              <p className="text-text-secondary">Ed Sheeran</p>
              <p className="text-sm text-muted">–ó–∞–º–æ–≤–∏–≤: –î–º–∏—Ç—Ä–æ –ö.</p>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-bamboo">01:23</div>
              <div className="text-xs text-muted">–∑–∞–ª–∏—à–∏–ª–æ—Å—å</div>
            </div>
          </div>
        </div>

        {/* Queue */}
        {currentQueue.length > 0 && (
          <div className="space-y-3">
            <h3 className="text-lg font-semibold text-muted">–î–∞–ª—ñ –≤ —á–µ—Ä–∑—ñ:</h3>
            {currentQueue.map((track, index) => (
              <div key={track.id} className="card">
                <div className="flex items-center gap-4">
                  <div className="w-8 h-8 rounded-full bg-panel flex items-center justify-center text-sm font-bold text-muted">
                    {index + 1}
                  </div>
                  <div className="flex-1">
                    <h4 className="font-semibold">{track.title}</h4>
                    <p className="text-sm text-text-secondary">{track.artist}</p>
                    <p className="text-xs text-muted">–ó–∞–º–æ–≤–∏–≤: {track.orderedBy}</p>
                  </div>
                  <div className="text-sm text-bamboo font-medium">
                    —á–µ—Ä–µ–∑ {track.timeLeft}
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </section>

      {/* Order Track Section */}
      <section className="space-y-4">
        <h2 className="text-2xl font-bold flex items-center gap-3">
          <span>üé§</span> –ó–∞–º–æ–≤–∏—Ç–∏ —Ç—Ä–µ–∫
        </h2>

        <div className="card">
          <form className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">–ù–∞–∑–≤–∞ —Ç—Ä–µ–∫—É –∞–±–æ –≤–∏–∫–æ–Ω–∞–≤–µ—Ü—å</label>
              <input 
                type="text"
                placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: Ed Sheeran - Perfect"
                className="w-full px-4 py-3 bg-panel border border-subtle rounded-xl focus:border-bamboo focus:outline-none transition-colors"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium mb-2">–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)</label>
              <textarea 
                placeholder="–û—Å–æ–±–ª–∏–≤—ñ –ø–æ–±–∞–∂–∞–Ω–Ω—è —â–æ–¥–æ —Ç—Ä–µ–∫—É..."
                rows={3}
                className="w-full px-4 py-3 bg-panel border border-subtle rounded-xl focus:border-bamboo focus:outline-none transition-colors resize-none"
              />
            </div>

            <div className="glass-effect p-4 rounded-xl">
              <div className="flex items-center justify-between mb-3">
                <span className="font-semibold">–í–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</span>
                <span className="text-2xl font-bold text-bamboo">50‚Ç¥</span>
              </div>
              <div className="text-sm text-text-secondary space-y-1">
                <p>‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ —Ç—Ä–µ–∫—É: 6 —Ö–≤–∏–ª–∏–Ω</p>
                <p>‚Ä¢ –û–¥–∏–Ω —Ç—Ä–µ–∫ –Ω–∞ 10 —Ö–≤–∏–ª–∏–Ω –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</p>
                <p>‚Ä¢ –ó–∞–±–æ—Ä–æ–Ω–µ–Ω–æ: –Ω–µ–µ—Ç–∏—á–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç, —Ä–µ–∫–ª–∞–º–∞</p>
              </div>
            </div>

            <button className="btn btn-primary w-full text-lg py-4">
              –ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞ 50‚Ç¥
            </button>
          </form>
        </div>
      </section>

      {/* Rules */}
      <section className="space-y-4">
        <h2 className="text-2xl font-bold flex items-center gap-3">
          <span>üìã</span> –ü—Ä–∞–≤–∏–ª–∞
        </h2>
        
        <div className="card">
          <div className="space-y-4">
            <div>
              <h3 className="font-semibold text-bamboo mb-2">‚úÖ –î–æ–∑–≤–æ–ª–µ–Ω–æ:</h3>
              <ul className="text-sm text-text-secondary space-y-1">
                <li>‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω–∞ –º—É–∑–∏–∫–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é</li>
                <li>‚Ä¢ –•—ñ—Ç–∏, –∫–ª–∞—Å–∏–∫–∞, —Å—É—á–∞—Å–Ω—ñ —Ç—Ä–µ–∫–∏</li>
                <li>‚Ä¢ –¢—Ä–µ–∫–∏ –¥–æ–≤–∂–∏–Ω–æ—é –¥–æ 6 —Ö–≤–∏–ª–∏–Ω</li>
                <li>‚Ä¢ –û–¥–∏–Ω —Ç—Ä–µ–∫ –Ω–∞ 10 —Ö–≤–∏–ª–∏–Ω –Ω–∞ –ª—é–¥–∏–Ω—É</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-semibold text-accent mb-2">‚ùå –ó–∞–±–æ—Ä–æ–Ω–µ–Ω–æ:</h3>
              <ul className="text-sm text-text-secondary space-y-1">
                <li>‚Ä¢ –†–æ—Å—ñ–π—Å—å–∫–∞ –º—É–∑–∏–∫–∞ —Ç–∞ –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∞</li>
                <li>‚Ä¢ –ù–µ–µ—Ç–∏—á–Ω–∏–π, –æ–±—Ä–∞–∑–ª–∏–≤–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç</li>
                <li>‚Ä¢ –ù–∞–¥—Ç–æ –≥–æ–ª–æ—Å–Ω–∞ –∞–±–æ –∞–≥—Ä–µ—Å–∏–≤–Ω–∞ –º—É–∑–∏–∫–∞</li>
                <li>‚Ä¢ –†–µ–∫–ª–∞–º–∞ –∞–±–æ –ø—ñ–¥–∫–∞—Å—Ç–∏</li>
                <li>‚Ä¢ –¢—Ä–µ–∫–∏ –¥–æ–≤—à–µ 6 —Ö–≤–∏–ª–∏–Ω</li>
              </ul>
            </div>
          </div>
        </div>
      </section>

      {/* Recent Popular Tracks */}
      <section className="space-y-4">
        <h2 className="text-2xl font-bold flex items-center gap-3">
          <span>üî•</span> –ü–æ–ø—É–ª—è—Ä–Ω–µ —Å—å–æ–≥–æ–¥–Ω—ñ
        </h2>
        
        <div className="grid md:grid-cols-2 gap-3">
          {recentTracks.map((track, index) => (
            <button key={index} className="card-interactive text-left group">
              <div className="flex items-center gap-3">
                <div className="w-12 h-12 rounded-xl bg-bamboo/20 flex items-center justify-center text-bamboo">
                  üéµ
                </div>
                <div className="flex-1">
                  <h4 className="font-semibold group-hover:text-bamboo transition-colors">
                    {track.title}
                  </h4>
                  <p className="text-sm text-text-secondary">{track.artist}</p>
                </div>
                <div className="opacity-0 group-hover:opacity-100 transition-opacity text-bamboo">
                  ‚Üí
                </div>
              </div>
            </button>
          ))}
        </div>
      </section>

      {/* Status Info */}
      <section className="card pattern-bamboo text-center">
        <div className="space-y-4">
          <div className="text-4xl">üéß</div>
          <h3 className="text-xl font-bold">–ú—É–∑–∏—á–Ω–∏–π –Ω–∞—Å—Ç—Ä—ñ–π PANDA</h3>
          <p className="text-text-secondary">
            –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–¥–µ—Ä—É—î –≤—Å—ñ —Ç—Ä–µ–∫–∏, —â–æ–± –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø—Ä–∏—î–º–Ω—É –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–ª—è –≤—Å—ñ—Ö –≥–æ—Å—Ç–µ–π
          </p>
          <div className="flex flex-wrap justify-center gap-4 mt-6">
            <span className="px-4 py-2 bg-glass rounded-full text-sm">üéµ –Ø–∫—ñ—Å–Ω–∏–π –∑–≤—É–∫</span>
            <span className="px-4 py-2 bg-glass rounded-full text-sm">‚ö° –®–≤–∏–¥–∫–∞ –æ–±—Ä–æ–±–∫–∞</span>
            <span className="px-4 py-2 bg-glass rounded-full text-sm">üé≠ –†—ñ–∑–Ω—ñ –∂–∞–Ω—Ä–∏</span>
          </div>
        </div>
      </section>
    </div>
  )
}